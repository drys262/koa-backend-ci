#
# User-defined substitutions:
#   _CLOUDSDK_COMPUTE_ZONE
#   _CLOUDSDK_CONTAINER_CLUSTER
#   _GITHUB_USERNAME
#   _KMS_KEY
#   _KMS_KEYRING
#

steps:
  # Build the backend container image.
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-t"
      - "gcr.io/${PROJECT_ID}/koa-backend:${TAG_NAME}"
      - "."

  # Retrieve and decrypt the GitHub Hub configuration.
  - name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        gsutil cp gs://hov-bucket/hub.enc hub.enc
        gcloud kms decrypt \
          --ciphertext-file=hub.enc \
          --plaintext-file=/config/hub \
          --location=global \
          --keyring=${_KMS_KEYRING} \
          --key=${_KMS_KEY}
    volumes:
      - name: "config"
        path: /config

  # Generate a kubeconfig file for the given GKE cluster.
  - name: "gcr.io/cloud-builders/kubectl"
    env:
      - "CLOUDSDK_COMPUTE_ZONE=${_CLOUDSDK_COMPUTE_ZONE}"
      - "CLOUDSDK_CONTAINER_CLUSTER=${_CLOUDSDK_CONTAINER_CLUSTER}"
      - "KUBECONFIG=/kube/config"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        CLUSTER=$$(gcloud config get-value container/cluster)
        PROJECT=$$(gcloud config get-value core/project)
        ZONE=$$(gcloud config get-value compute/zone)

        gcloud container clusters get-credentials "$${CLUSTER}" \
          --project "$${PROJECT}" \
          --zone "$${ZONE}"
    volumes:
      - name: "kube"
        path: /kube

  - name: "gcr.io/${PROJECT_ID}/hub"
    env:
      - "HUB_CONFIG=/config/hub"
      - "KUBECONFIG=/kube/config"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        ACTIVE_ACCOUNT=$(gcloud auth list --filter=status:ACTIVE --format="value(account)")
        hub config --global credential.https://github.com.helper /usr/local/bin/hub-credential-helper
        hub config --global hub.protocol https
        hub config --global user.email "$${ACTIVE_ACCOUNT}"
        hub config --global user.name "Google Container Builder"
        hub clone "https://github.com/${_GITHUB_USERNAME}/basic-app-infrastructure-qa.git"
        cd basic-app-infrastructure-qa
        cat <<EOF > patch.yaml
        spec:
          template:
            spec:
              containers:
                - name: koa-backend
                  image: gcr.io/${PROJECT_ID}/koa-backend:${TAG_NAME}
        EOF
        kubectl patch --local -o yaml \
          -f kubernetes/deployments/backend.yaml \
          -p "$(cat patch.yaml)" \
          > backend.yaml
        mv backend.yaml kubernetes/deployments/backend.yaml
        hub add kubernetes/deployments/backend.yaml
              
        hub commit -F- <<EOF
        Update the backend application
        This commit updates the backend deployment container image to:
            gcr.io/${PROJECT_ID}/koa-backend:${TAG_NAME}.
        Build ID: ${BUILD_ID}
        EOF
        hub push origin master
    volumes:
      - name: "config"
        path: /config
      - name: "kube"
        path: /kube

images:
  - gcr.io/${PROJECT_ID}/koa-backend:${TAG_NAME}
